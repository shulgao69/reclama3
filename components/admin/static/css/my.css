/* Общие свойства*/
body {
    font-family: 'Roboto', sans-serif;
}

/* телефон в шапке сайта*/
#phone {
    font-family: 'Roboto Condensed', sans-serif;
    font-size: 26px;
    color: #0796a6;
}

 /* Тонкая полоса в шапке сайта между логотипом, адресом, телефоном и меню*/
.plashka-f {
height: 6px; /*ширина плашки*/
background-color: #0796a6; /* начальный цвет плашки*/

/* Задание свойств анимации (в нашем случае просто переход из одного цвета в другой):
Standard syntax:
https://html5css.ru/cssref/css3_pr_animation.php
https://html5css.ru/css/css3_animations.php
animation-name	            Задает имя ключевого кадра, который требуется привязать к селектору
animation-duration	        Указывает, сколько секунд или миллисекунд требуется анимации для завершения
animation-timing-function	Задает кривую скорости анимации
animation-delay	            Указывает задержку перед запуском анимации
animation-iteration-count	Указывает, сколько раз должна воспроизводиться анимация
animation-direction	        Указывает, должна ли анимация воспроизводиться в обратном порядке на альтернативных циклах
animation-fill-mode	        Указывает, какие значения применяются анимацией вне времени ее выполнения
animation-play-state	    Указывает, запущена ли анимация или приостановлена
initial		                Присваивает этому свойству значение по умолчанию. (Читайте о initial)
inherit		                Наследует это свойство из родительского элемента. (Читайте о inherit)*/

animation-name: anime; /* Имя анимации*/
animation-duration: 4s; /*Свойство animation-duration определяет, сколько времени должна занять анимация для завершения*/
animation-timing-function: linear; /*Воспроизведение анимации с одинаковой скоростью от начала до конца
animation-timing-function задает кривую скорости анимации.
linear	                Анимация имеет одинаковую скорость от начала до конца
ease	                Значение по умолчанию. Анимация имеет медленный запуск, а затем быстро, прежде чем она заканчивается медленно
ease-in	                Анимация имеет медленный запуск
ease-out	            Анимация имеет медленный конец
ease-in-out	            Анимация имеет медленный запуск и медленный конец
step-start	            Эквивалентно шагам (1, запуск)
step-end	            Эквивалентно шагам (1, конец)
steps(int,start|end)	Задает функцию степпинга с двумя параметрами. Первый параметр указывает количество интервалов в функции. Оно должно быть положительным целым числом (больше 0). Второй параметр, который является необязательным, является либо значением "Start", либо "End", и указывает точку, в которой изменение значений происходит в интервале. Если второй параметр опущен, ему дается значение "End"
cubic-bezier(n,n,n,n)	Определите собственные значения в функции кубической Безье
Возможные значения — это числовые значения от 0 до 1
initial	                Присваивает этому свойству значение по умолчанию. (Читайте о initial)
inherit	                Наследует это свойство из родительского элемента. (Читайте о inherit)*/
animation-delay: 2s; /* Свойство определяет время задержки начала анимации*/
animation-iteration-count: infinite; /*Воспроизвести анимацию бесконечное количество раз либо указать цифрой количество*/
animation-direction: alternate; /*Сначала воспроизвести анимацию вперед, а затем назад:
normal	        Значение по умолчанию. Анимация воспроизводится как обычная (вперед)
reverse	        Анимация воспроизводится в обратном направлении (назад)
alternate	    Анимация сначала разыгрывается вперед, затем назад
alternate-reverse	Анимация сначала воспроизводится назад, а затем пересылается
initial		    Присваивает этому свойству значение по умолчанию. (Читайте о initial)
inherit		    Наследует это свойство из родительского элемента. (Читайте о inherit)*/
/*animation-fill-mode: none; /*
none	        Значение по умолчанию. Анимация не будет применять стили к элементу до или после выполнения
forwards	    Элемент сохранит значения стиля, заданные последним ключевым кадром (в зависимости от направления анимации и анимации-количество итераций)
backwards	    Элемент получит значения стиля, заданные первым ключевым кадром (в зависимости от направления анимации), и сохранит его во время периода задержки анимации
both	        Анимация будет следовать правилам как вперед, так и назад, расширяя свойства анимации в обоих направлениях
initial	        Присваивает этому свойству значение по умолчанию. (Читайте о initial)
inherit	        Наследует это свойство из родительского элемента. (Читайте о inherit)*/
animation-play-state: running; /*
running	    Значение по умолчанию. Указывает, что анимация запущена
paused	    Указывает, что анимация приостановлена
initial	    Присваивает этому свойству значение по умолчанию. (Читайте о initial)
inherit	    Наследует это свойство из родительского элемента. (Читайте о inherit)*/

/* Те же свойства в    Safari 4.0 - 8.0 */
-webkit-animation-name: anime;
-webkit-animation-duration: 4s;
-webkit-animation-timing-function: linear;
-webkit-animation-delay: 2s;
-webkit-animation-iteration-count: infinite;
-webkit-animation-direction: alternate;
-webkit-animation-play-state: running;
}

/*Анимация цвета плашки id=plashka-f:*/
/* Standard syntax */
@keyframes anime {
    from {background-color: #0796a6;}
    to {background-color: #08c915;}
}
/* Safari 4.0 - 8.0 */
@-webkit-keyframes anime {
    from {background-color: #0796a6;}
    to {background-color: #08c915;}
}


footer {
        background-color: #08415a;
        height: 450px;
        width: 100%;
        color: white;
      }


/* всплывающие подсказки */
/* Пример 1 (работает) https://question-it.com/questions/1810513/perekrasit-vsplyvajuschuju-podskazku-v-bootstrap-4
/*Tooltip*/
/*
.tooltip-inner{ color:white; font-weight:400;  background-color:red;}
.tooltip.bs-tooltip-auto[x-placement^=right] .arrow::before, .tooltip.bs-tooltip-right .arrow::before { border-right-color: red;}
*/

  /*Пример 2  (работает) https://html5css.ru/edithtm/index.php*/
  /* Tooltip */
  .tooltip > .tooltip-inner {
      background-color: #08c915;
      color: white;
      border: 3px solid success;
      padding: 5px;
      font-size: 15px;
  }
  /* Tooltip on top */
  .tooltip.top > .tooltip-arrow {
      border-top: 5px solid green;
  }
  /* Tooltip on bottom */
  .tooltip.bottom > .tooltip-arrow {
      border-bottom: 5px solid blue;
  }
  /* Tooltip on left */
  .tooltip.left > .tooltip-arrow {
      border-left: 5px solid red;
  }
  /* Tooltip on right */
  .tooltip.right > .tooltip-arrow {
      border-right: 5px solid black;
  }

